From 7e0195bc01e7c76057b98e3bc87c07c28004c933 Mon Sep 17 00:00:00 2001
From: L0g4n <yannik.klubertanz@posteo.de>
Date: Fri, 9 Dec 2022 17:45:49 +0100
Subject: [PATCH 1/4] Add `alloc_init` feature

---
 runtime/Cargo.toml         |  3 +++
 runtime/src/startup/mod.rs | 30 ++++++++++++++++++++++++++++++
 2 files changed, 33 insertions(+)

diff --git a/runtime/Cargo.toml b/runtime/Cargo.toml
index a863392..3509a40 100644
--- a/runtime/Cargo.toml
+++ b/runtime/Cargo.toml
@@ -14,6 +14,9 @@ libtock_platform = { path = "../platform" }
 
 [features]
 
+# Initialize an allocator for access to heap memory
+alloc_init = []
+
 # By default, libtock_runtime looks for the LIBTOCK_PLATFORM variable to decide
 # what layout file to use. If you are providing your own linker script, set
 # no_auto_layout to disable the layout file logic.
diff --git a/runtime/src/startup/mod.rs b/runtime/src/startup/mod.rs
index 769bfe9..046dda6 100644
--- a/runtime/src/startup/mod.rs
+++ b/runtime/src/startup/mod.rs
@@ -10,6 +10,8 @@ core::arch::global_asm!(include_str!("asm_arm.s"));
 #[cfg(target_arch = "riscv32")]
 core::arch::global_asm!(include_str!("asm_riscv32.s"));
 
+static APP_HEAP_SIZE: Option<&'static str> = option_env!("APP_HEAP_SIZE");
+
 /// `set_main!` is used to tell `libtock_runtime` where the process binary's
 /// `main` function is. The process binary's `main` function must have the
 /// signature `FnOnce() -> T`, where T is some concrete type that implements
@@ -74,6 +76,7 @@ struct RtHeader {
     data_ram_start: *mut u8,
     bss_size: usize,
     bss_start: *mut u8,
+    heap_start: *mut u8,
 }
 
 // rust_start is the first Rust code to execute in the process. It is called
@@ -83,6 +86,8 @@ extern "C" fn rust_start() -> ! {
     extern "Rust" {
         fn libtock_unsafe_main() -> !;
         static rt_header: RtHeader;
+        #[cfg(feature = "alloc_init")]
+        fn libtock_alloc_init(heap_bottom: *mut u8, heap_size: usize);
     }
 
     // TODO: Implement a safe memop API in libtock_platform and migrate these
@@ -92,16 +97,41 @@ extern "C" fn rust_start() -> ! {
     // impact the execution of this process.
     #[cfg(not(feature = "no_debug_memop"))]
     unsafe {
+        // specify the top of the application stack which grows downwards
         TockSyscalls::syscall2::<{ syscall_class::MEMOP }>([
             10u32.into(),
             rt_header.stack_top.into(),
         ]);
+
+        // specify the start of the application heap which grows upwards
         TockSyscalls::syscall2::<{ syscall_class::MEMOP }>([
             11u32.into(),
             rt_header.initial_break.into(),
         ]);
     }
 
+    #[cfg(feature = "alloc_init")]
+    {
+        let app_heap_size: usize = match APP_HEAP_SIZE {
+            Some(var) => var
+                .parse()
+                .ok()
+                .expect("could not parse APP_HEAP_SIZE as usize!"),
+            None => 9000,
+        };
+
+        let app_heap_bottom = unsafe { rt_header.heap_start };
+
+        let app_heap_end = unsafe { *app_heap_bottom as usize + app_heap_size };
+
+        unsafe {
+            // tell the kernel the new app heap break (which is the upper address bound of the process)
+            TockSyscalls::syscall2::<{ syscall_class::MEMOP }>([0u32.into(), app_heap_end.into()]);
+
+            libtock_alloc_init(app_heap_bottom, app_heap_size);
+        }
+    }
+
     // Safety: libtock_unsafe_main is defined by the set_main! macro, and its
     // signature matches the signature in the `extern` block in this function.
     unsafe {
-- 
2.34.1


From 988c1b584b0a5c9bb2fffafd713360b7955adaf6 Mon Sep 17 00:00:00 2001
From: L0g4n <yannik.klubertanz@posteo.de>
Date: Sat, 10 Dec 2022 19:15:26 +0100
Subject: [PATCH 2/4] Fix static heap initialization

---
 runtime/src/lib.rs         |  1 +
 runtime/src/startup/mod.rs | 10 +++++++---
 2 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/runtime/src/lib.rs b/runtime/src/lib.rs
index 1054e41..b5c519a 100644
--- a/runtime/src/lib.rs
+++ b/runtime/src/lib.rs
@@ -19,6 +19,7 @@
 //! and provide its own layout file.
 
 #![no_std]
+#![feature(strict_provenance)]
 #![warn(unsafe_op_in_unsafe_fn)]
 
 pub mod startup;
diff --git a/runtime/src/startup/mod.rs b/runtime/src/startup/mod.rs
index 046dda6..052479f 100644
--- a/runtime/src/startup/mod.rs
+++ b/runtime/src/startup/mod.rs
@@ -76,7 +76,6 @@ struct RtHeader {
     data_ram_start: *mut u8,
     bss_size: usize,
     bss_start: *mut u8,
-    heap_start: *mut u8,
 }
 
 // rust_start is the first Rust code to execute in the process. It is called
@@ -120,9 +119,14 @@ extern "C" fn rust_start() -> ! {
             None => 9000,
         };
 
-        let app_heap_bottom = unsafe { rt_header.heap_start };
+        // the heap starts after the `bss` section
+        let app_heap_bottom = unsafe { rt_header.bss_start.add(rt_header.bss_size) };
 
-        let app_heap_end = unsafe { *app_heap_bottom as usize + app_heap_size };
+        assert_eq!(app_heap_bottom.addr(), unsafe {
+            rt_header.bss_start.addr() + rt_header.bss_size
+        });
+
+        let app_heap_end = unsafe { app_heap_bottom.add(app_heap_size) };
 
         unsafe {
             // tell the kernel the new app heap break (which is the upper address bound of the process)
-- 
2.34.1


From e67ed8eefb1b69aa132ceeb3f3d7f2925eca153c Mon Sep 17 00:00:00 2001
From: L0g4n <yannik.klubertanz@posteo.de>
Date: Thu, 15 Dec 2022 22:19:41 +0100
Subject: [PATCH 3/4] Sync rust toolchain with used tockos version

---
 .gitignore     | 2 ++
 rust-toolchain | 2 +-
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/.gitignore b/.gitignore
index 1b72444..2a4b1ae 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,4 @@
 /Cargo.lock
 /target
+
+**/tags*
diff --git a/rust-toolchain b/rust-toolchain
index e911a96..d00feab 100644
--- a/rust-toolchain
+++ b/rust-toolchain
@@ -1,7 +1,7 @@
 [toolchain]
 # See https://rust-lang.github.io/rustup-components-history/ for a list of
 # recently nightlies and what components are available for them.
-channel = "nightly-2022-06-10"
+channel = "nightly-2022-10-22"
 components = ["clippy", "miri", "rustfmt"]
 targets = ["thumbv7em-none-eabi",
            "riscv32imac-unknown-none-elf",
-- 
2.34.1


From 3c75e1c6a793c66a292559580948b7d53a150550 Mon Sep 17 00:00:00 2001
From: L0g4n <yannik.klubertanz@posteo.de>
Date: Sat, 14 Jan 2023 16:55:57 +0100
Subject: [PATCH 4/4] Make button driver num public

---
 apis/buttons/src/lib.rs | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/apis/buttons/src/lib.rs b/apis/buttons/src/lib.rs
index 565970f..f5d08b5 100644
--- a/apis/buttons/src/lib.rs
+++ b/apis/buttons/src/lib.rs
@@ -135,7 +135,7 @@ mod tests;
 // Driver number and command IDs
 // -----------------------------------------------------------------------------
 
-const DRIVER_NUM: u32 = 3;
+pub const DRIVER_NUM: u32 = 3;
 
 // Command IDs
 const BUTTONS_COUNT: u32 = 0;
-- 
2.34.1

